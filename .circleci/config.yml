version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/node:18.20.2
    working_directory: ~/project

jobs:
  build:
    executor: docker-executor
    steps:
      - checkout

      - restore_cache:
          keys:
            - v2-deps-{{ checksum "yarn.lock" }}

      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          key: v2-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - run:
          name: Build Next.js app
          command: yarn build

      - run:
          name: Create Deployment Tarball
          command: |
            tar -czf app.tar.gz \
              .next \
              src \
              public \
              node_modules \
              package.json \
              yarn.lock \
              tsconfig.json \
              Dockerfile \
              next.config.ts \
              docker-compose.yml

      - persist_to_workspace:
          root: .
          paths:
            - app.tar.gz

  deploy:
    executor: docker-executor
    steps:
      - attach_workspace:
          at: ~/project

      - add_ssh_keys:
          fingerprints:
            - "SHA256:n+VPAk6fqfev3EcqlhCl0iToOae0jloWcPUYungwVic"

      - run:
          name: Deploy Tarball to Server and Run Docker Compose
          command: |
            PROJECT_PATH=/home/rzidinc/Projects/sites/wcd_eka_patas_group_8

            echo "ðŸ“¦ Creating target directory on server..."
            ssh -o StrictHostKeyChecking=no rzidinc@154.26.134.92 "mkdir -p $PROJECT_PATH"

            echo "ðŸšš Transferring tarball to server..."
            scp app.tar.gz rzidinc@154.26.134.92:$PROJECT_PATH/

            echo "ðŸ“‚ Extracting & Running Docker Compose..."
            ssh -t -o StrictHostKeyChecking=no rzidinc@154.26.134.92 "
              cd $PROJECT_PATH &&
              tar -xzf app.tar.gz &&
              docker compose down || true &&
              docker compose build &&
              docker compose up --wait &&
              rm -f app.tar.gz
            "

workflows:
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main
